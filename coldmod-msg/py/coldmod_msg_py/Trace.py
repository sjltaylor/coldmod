# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Trace(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Trace()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTrace(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Trace
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Trace
    def Event(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Trace
    def Path(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Trace
    def Line(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Trace
    def Col(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def TraceStart(builder): builder.StartObject(4)
def Start(builder):
    return TraceStart(builder)
def TraceAddEvent(builder, event): builder.PrependInt8Slot(0, event, 0)
def AddEvent(builder, event):
    return TraceAddEvent(builder, event)
def TraceAddPath(builder, path): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(path), 0)
def AddPath(builder, path):
    return TraceAddPath(builder, path)
def TraceAddLine(builder, line): builder.PrependUint32Slot(2, line, 0)
def AddLine(builder, line):
    return TraceAddLine(builder, line)
def TraceAddCol(builder, col): builder.PrependUint32Slot(3, col, 0)
def AddCol(builder, col):
    return TraceAddCol(builder, col)
def TraceEnd(builder): return builder.EndObject()
def End(builder):
    return TraceEnd(builder)